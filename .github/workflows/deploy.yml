name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Cache Node.js dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          **/node_modules
          home/node_modules
          project/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
        
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          projects/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
        
    - name: Cache Trunk installation
      uses: actions/cache@v4
      id: trunk-cache
      with:
        path: ~/.cargo/bin/trunk
        key: ${{ runner.os }}-trunk-${{ hashFiles('projects/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-trunk-
        
    - name: Install trunk
      if: steps.trunk-cache.outputs.cache-hit != 'true'
      run: cargo install trunk
      
    - name: Install dependencies (root)
      run: npm install
      
    - name: Install dependencies (home)
      run: cd home && npm install
      
    - name: Install dependencies (project)
      run: cd project && npm install
      
  
    - name: Build all applications
      run: npm run build-all
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
